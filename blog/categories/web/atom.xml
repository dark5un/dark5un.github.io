<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Web | I am too old for this (not)]]></title>
  <link href="http://dark5un.github.io/blog/categories/web/atom.xml" rel="self"/>
  <link href="http://dark5un.github.io/"/>
  <updated>2017-02-18T18:21:00+00:00</updated>
  <id>http://dark5un.github.io/</id>
  <author>
    <name><![CDATA[Panos Xynos]]></name>
    <email><![CDATA[panagiotis.xinos@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Challenge 1 - Java Web API]]></title>
    <link href="http://dark5un.github.io/blog/2017/02/09/challenge1-java-api/"/>
    <updated>2017-02-09T01:31:00+00:00</updated>
    <id>http://dark5un.github.io/blog/2017/02/09/challenge1-java-api</id>
    <content type="html"><![CDATA[<p>Challenge? Well yes why not?</p>

<p>So lets start creating a Java API using the <a href="https://en.wikipedia.org/wiki/Leet">1337</a>est of the <a href="https://en.wikipedia.org/wiki/Leet">1337</a>est and as hardcore as possible! Always in a main stream fashion. (Don&rsquo;t ask me how I want to achieve this. I have no clue so far)</p>

<p>Tools for the thing? Hmmm lets start with <a href="https://gradle.org/">Gradle</a>! Who cares about <a href="http://ant.apache.org/">Ant</a> anymore and lately <a href="https://maven.apache.org/">Maven</a> seems so 2k (put troll emoticon here).</p>

<p>Ok Mr Gradle I would like a nice clean project for my app to run:</p>

<pre><code class="bash">$ gradle init --type java-application --test-framework spock
</code></pre>

<p>this will output:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="s">/&lt;em&gt;</span>
</span><span class='line'><span class="s"> * This build file was generated by the Gradle &amp;lsquo;init&amp;rsquo; task.</span>
</span><span class='line'><span class="s"> *</span>
</span><span class='line'><span class="s"> * This generated file contains a sample Java project to get you started.</span>
</span><span class='line'><span class="s"> * For more details take a look at the Java Quickstart chapter in the Gradle</span>
</span><span class='line'><span class="s"> * user guide available at &lt;a href=&quot;https://docs.gradle.org/</span><span class="mf">3.3</span><span class="s">/userguide/</span><span class="n">tutorial_java_projects</span><span class="o">.</span><span class="na">html</span><span class="err">&quot;</span><span class="o">&gt;</span><span class="nl">https:</span><span class="c1">//docs.gradle.org/3.3/userguide/tutorial_java_projects.html&lt;/a&gt;</span>
</span><span class='line'> <span class="o">&lt;</span><span class="s">/em&gt;/</span><span class="o">&lt;</span><span class="s">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s">&lt;p&gt;// Apply the java plugin to add support for Java</span>
</span><span class='line'><span class="s">apply plugin: &amp;lsquo;java&amp;rsquo;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// Apply the application plugin to add support for building an application</span>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="o">;</span><span class="n">application</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="o">;&lt;</span><span class="s">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s">&lt;p&gt;// Apply the groovy plugin to also add support for Groovy (needed for Spock)</span>
</span><span class='line'><span class="s">apply plugin: &amp;lsquo;groovy&amp;rsquo;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// In this section you declare where to find the dependencies of your project</span>
</span><span class='line'><span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// Use jcenter for resolving your dependencies.</span>
</span><span class='line'>    <span class="c1">// You can declare any Maven/Ivy/file repository here.</span>
</span><span class='line'>    <span class="n">jcenter</span><span class="o">()</span>
</span><span class='line'><span class="o">}&lt;</span><span class="s">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s">&lt;p&gt;dependencies {</span>
</span><span class='line'><span class="s">    // The production code uses Guava</span>
</span><span class='line'><span class="s">    compile &amp;lsquo;com.google.guava:guava:20.0&amp;rsquo;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">// Use the latest Groovy version for Spock testing</span>
</span><span class='line'><span class="n">testCompile</span> <span class="s1">&#39;org.codehaus.groovy:groovy-all:2.4.7&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Use the awesome Spock testing and specification framework even with Java</span>
</span><span class='line'><span class="n">testCompile</span> <span class="s1">&#39;org.spockframework:spock-core:1.0-groovy-2.4&#39;</span>
</span><span class='line'><span class="n">testCompile</span> <span class="s1">&#39;junit:junit:4.12&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="s">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}&lt;</span><span class="s">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s">&lt;p&gt;/</span><span class="o">/</span> <span class="n">Define</span> <span class="n">the</span> <span class="n">main</span> <span class="kd">class</span> <span class="nc">for</span> <span class="n">the</span> <span class="n">application</span>
</span><span class='line'><span class="n">mainClassName</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="o">;</span><span class="n">App</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Why <a href="http://spockframework.org">Spock</a> instead of <a href="http://testng.org">TestNG</a> (and why not <a href="http://junit.org">JUnit</a>)?</p>

<p>Because Spock had enough love in its site and because it is a cool name. Ok <a href="http://www.groovy-lang.org">Groovy</a> is stupid easy to play with, that is why. And testing in Java sucks. (Yes I am doing group therapy for what I just said)</p>

<p>Gradle init has finished and there is a basic folder structure. Look ma no hands! How 2017 this feels! But the Gradle people made it even better! They created a basic java app structure. And added <a href="https://github.com/google/guava">Google Guava</a> as a dependency!</p>

<p>Why java-application type you said? Well I was thinking about <a href="https://projects.spring.io/spring-boot">Spring Boot</a> and felt so good to just start my app from command line. I can do it with <a href="http://expressjs.com">Node.js and Express</a> I can certainly do it with <a href="http://rubyonrails.org">Rails</a> so there you go. Java saw the light finally!</p>

<p>So now we have almost what we need. Spring libraries are not here yet. Lets just use the web starter of spring boot.</p>

<p>So build.gradle should look like this:</p>

<pre><code class="groovy">buildscript {
    ext {
        springBootVersion = '1.5.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

// Apply the groovy plugin to also add support for Groovy (needed for Spock)
apply plugin: 'groovy'

// Apply the spring boot plugin
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'demo'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
  // The production code uses Guava
    compile 'com.google.guava:guava:20.0'
    compile 'org.springframework.boot:spring-boot-starter-web'
  // Use the latest Groovy version for Spock testing
    testCompile 'org.codehaus.groovy:groovy-all:2.4.7'

  // Use the awesome Spock testing and specification framework even with Java
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'junit:junit:4.12'
}

// Define the main class for the application
mainClassName = 'App'
</code></pre>

<p>Now lets change src/main/java/App.java to:</p>

<pre><code class="java">import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
@SpringBootApplication
public class App {
    public static void main(String[] args) {
        SpringApplication.run(App.class, args);
    }
}
</code></pre>

<p>and run it by issuing:</p>

<pre><code class="bash">./gradlew bootRun
</code></pre>

<p>and we get a nice failure because:</p>

<pre><code>** WARNING ** : Your ApplicationContext is unlikely to start due to a @ComponentScan of the default package.
</code></pre>

<p>Lets try and set a proper classpath. So move the App.java in a directory under src/main/java/org/example/apps.
Don&rsquo;t forget to add this:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">org</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">apps</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">on</span> <span class="n">top</span> <span class="n">of</span> <span class="n">the</span> <span class="n">App</span><span class="o">.</span><span class="na">java</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="n">Run</span> <span class="n">it</span> <span class="n">again</span> <span class="n">and</span> <span class="nl">now:</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">Execution</span> <span class="n">failed</span> <span class="k">for</span> <span class="n">task</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="o">;:</span><span class="n">bootRun</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="o">;.</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span>
</span><span class='line'><span class="n">Yes</span><span class="o">!</span> <span class="n">We</span> <span class="n">need</span> <span class="n">to</span> <span class="n">update</span> <span class="n">build</span><span class="o">.</span><span class="na">gradle</span> <span class="n">to</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span><span class="n">groovy</span>
</span><span class='line'><span class="n">mainClassName</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="o">;</span><span class="n">org</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">apps</span><span class="o">.</span><span class="na">App</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Finally start it and &hellip; voila!!
<code>
2017-02-13 22:38:51.568  INFO 48462 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-02-13 22:38:51.658  INFO 48462 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2017-02-13 22:38:51.664  INFO 48462 --- [           main] org.example.apps.App                     : Started App in 3.595 seconds (JVM running for 3.942)
</code></p>

<p>Instead of the bootRun gradle task you can also use:
<code>bash
./gradlew run
</code>
thanks to application plugin. More information about gradle plugins and where to go from here because our app does not do much now, in the next adventure. Stay tuned!</p>
]]></content>
  </entry>
  
</feed>
