<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[I am too old for this (not)]]></title>
  <link href="http://dark5un.github.io/atom.xml" rel="self"/>
  <link href="http://dark5un.github.io/"/>
  <updated>2017-02-13T22:44:20+00:00</updated>
  <id>http://dark5un.github.io/</id>
  <author>
    <name><![CDATA[Panos Xynos]]></name>
    <email><![CDATA[panagiotis.xinos@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Challenge 1 - Java Web API]]></title>
    <link href="http://dark5un.github.io/blog/2017/02/09/challenge1-java-api/"/>
    <updated>2017-02-09T01:31:00+00:00</updated>
    <id>http://dark5un.github.io/blog/2017/02/09/challenge1-java-api</id>
    <content type="html"><![CDATA[<p>Challenge? Well yes why not?</p>

<p>So lets start creating a Java API using the <a href="https://en.wikipedia.org/wiki/Leet">1337</a>est of the <a href="https://en.wikipedia.org/wiki/Leet">1337</a>est and as hardcore as possible! Always in a main stream fashion. (Don&rsquo;t ask me how I want to achieve this. I have no clue so far)</p>

<p>Tools for the thing? Hmmm lets start with <a href="https://gradle.org/">Gradle</a>! Who cares about <a href="http://ant.apache.org/">Ant</a> anymore and lately <a href="https://maven.apache.org/">Maven</a> seems so 2k (put troll emoticon here).</p>

<p>Ok Mr Gradle I would like a nice clean project for my app to run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gradle init --type java-application --test-framework spock
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>this will output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * This build file was generated by the Gradle &#39;init&#39; task.</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * This generated file contains a sample Java project to get you started.</span>
</span><span class='line'><span class="cm"> * For more details take a look at the Java Quickstart chapter in the Gradle</span>
</span><span class='line'><span class="cm"> * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Apply the java plugin to add support for Java</span>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Apply the application plugin to add support for building an application</span>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;application&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Apply the groovy plugin to also add support for Groovy (needed for Spock)</span>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;groovy&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// In this section you declare where to find the dependencies of your project</span>
</span><span class='line'><span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// Use jcenter for resolving your dependencies.</span>
</span><span class='line'>    <span class="c1">// You can declare any Maven/Ivy/file repository here.</span>
</span><span class='line'>    <span class="n">jcenter</span><span class="o">()</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// The production code uses Guava</span>
</span><span class='line'>    <span class="n">compile</span> <span class="s1">&#39;com.google.guava:guava:20.0&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Use the latest Groovy version for Spock testing</span>
</span><span class='line'>    <span class="n">testCompile</span> <span class="s1">&#39;org.codehaus.groovy:groovy-all:2.4.7&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Use the awesome Spock testing and specification framework even with Java</span>
</span><span class='line'>    <span class="n">testCompile</span> <span class="s1">&#39;org.spockframework:spock-core:1.0-groovy-2.4&#39;</span>
</span><span class='line'>    <span class="n">testCompile</span> <span class="s1">&#39;junit:junit:4.12&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Define the main class for the application</span>
</span><span class='line'><span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;App&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Why <a href="http://spockframework.org">Spock</a> instead of <a href="http://testng.org">TestNG</a> (and why not <a href="http://junit.org">JUnit</a>)?</p>

<p>Because Spock had enough love in its site and because it is a cool name. Ok <a href="http://www.groovy-lang.org">Groovy</a> is stupid easy to play with, that is why. And testing in Java sucks. (Yes I am doing group therapy for what I just said)</p>

<p>Gradle init has finished and there is a basic folder structure. Look ma no hands! How 2017 this feels! But the Gradle people made it even better! They created a basic java app structure. And added <a href="https://github.com/google/guava">Google Guava</a> as a dependency!</p>

<p>Why java-application type you said? Well I was thinking about <a href="https://projects.spring.io/spring-boot">Spring Boot</a> and felt so good to just start my app from command line. I can do it with <a href="http://expressjs.com">Node.js and Express</a> I can certainly do it with <a href="http://rubyonrails.org">Rails</a> so there you go. Java saw the light finally!</p>

<p>So now we have almost what we need. Spring libraries are not here yet. Lets just use the web starter of spring boot.</p>

<p>So build.gradle should look like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">buildscript</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">ext</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">springBootVersion</span> <span class="o">=</span> <span class="s1">&#39;1.5.1.RELEASE&#39;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">mavenCentral</span><span class="o">()</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">classpath</span><span class="o">(</span><span class="s2">&quot;org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Apply the java plugin to add support for Java</span>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Apply the application plugin to add support for building an application</span>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;application&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Apply the groovy plugin to also add support for Groovy (needed for Spock)</span>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;groovy&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Apply the spring boot plugin</span>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;org.springframework.boot&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">jar</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">baseName</span> <span class="o">=</span> <span class="s1">&#39;demo&#39;</span>
</span><span class='line'>  <span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;0.0.1-SNAPSHOT&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">sourceCompatibility</span> <span class="o">=</span> <span class="mf">1.8</span>
</span><span class='line'>
</span><span class='line'><span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">mavenCentral</span><span class="o">()</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>  <span class="c1">// The production code uses Guava</span>
</span><span class='line'>  <span class="n">compile</span> <span class="s1">&#39;com.google.guava:guava:20.0&#39;</span>
</span><span class='line'>  <span class="n">compile</span> <span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span>
</span><span class='line'>  <span class="c1">// Use the latest Groovy version for Spock testing</span>
</span><span class='line'>    <span class="n">testCompile</span> <span class="s1">&#39;org.codehaus.groovy:groovy-all:2.4.7&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Use the awesome Spock testing and specification framework even with Java</span>
</span><span class='line'>  <span class="n">testCompile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-test&#39;</span><span class="o">)</span>
</span><span class='line'>    <span class="n">testCompile</span> <span class="s1">&#39;org.spockframework:spock-core:1.0-groovy-2.4&#39;</span>
</span><span class='line'>    <span class="n">testCompile</span> <span class="s1">&#39;junit:junit:4.12&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Define the main class for the application</span>
</span><span class='line'><span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;App&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now lets change src/main/java/App.java to:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * This Java source file was generated by the Gradle &#39;init&#39; task.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nd">@SpringBootApplication</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">App</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">App</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>and run it by issuing:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./gradlew bootRun
</span></code></pre></td></tr></table></div></figure>


<p>and we get a nice failure because:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>** WARNING ** : Your ApplicationContext is unlikely to start due to a @ComponentScan of the default package.
</span></code></pre></td></tr></table></div></figure>


<p>Lets try and set a proper classpath. So move the App.java in a directory under src/main/java/org/example/apps.
Don&rsquo;t forget to add this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">org</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">apps</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>on top of the App.java.</p>

<p>Run it again and now:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Execution</span> <span class="n">failed</span> <span class="k">for</span> <span class="n">task</span> <span class="err">&#39;</span><span class="o">:</span><span class="n">bootRun</span><span class="err">&#39;</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Yes! We need to update build.gradle to</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;org.example.apps.App&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally start it and &hellip; voila!!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="mi">2017</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">13</span> <span class="mi">22</span><span class="o">:</span><span class="mi">38</span><span class="o">:</span><span class="mf">51.568</span>  <span class="n">INFO</span> <span class="mi">48462</span> <span class="o">---</span> <span class="o">[</span>           <span class="n">main</span><span class="o">]</span> <span class="n">o</span><span class="o">.</span><span class="na">s</span><span class="o">.</span><span class="na">j</span><span class="o">.</span><span class="na">e</span><span class="o">.</span><span class="na">a</span><span class="o">.</span><span class="na">AnnotationMBeanExporter</span>        <span class="o">:</span> <span class="n">Registering</span> <span class="n">beans</span> <span class="k">for</span> <span class="n">JMX</span> <span class="n">exposure</span> <span class="n">on</span> <span class="n">startup</span>
</span><span class='line'><span class="mi">2017</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">13</span> <span class="mi">22</span><span class="o">:</span><span class="mi">38</span><span class="o">:</span><span class="mf">51.658</span>  <span class="n">INFO</span> <span class="mi">48462</span> <span class="o">---</span> <span class="o">[</span>           <span class="n">main</span><span class="o">]</span> <span class="n">s</span><span class="o">.</span><span class="na">b</span><span class="o">.</span><span class="na">c</span><span class="o">.</span><span class="na">e</span><span class="o">.</span><span class="na">t</span><span class="o">.</span><span class="na">TomcatEmbeddedServletContainer</span> <span class="o">:</span> <span class="n">Tomcat</span> <span class="n">started</span> <span class="n">on</span> <span class="n">port</span><span class="o">(</span><span class="n">s</span><span class="o">):</span> <span class="mi">8080</span> <span class="o">(</span><span class="n">http</span><span class="o">)</span>
</span><span class='line'><span class="mi">2017</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">13</span> <span class="mi">22</span><span class="o">:</span><span class="mi">38</span><span class="o">:</span><span class="mf">51.664</span>  <span class="n">INFO</span> <span class="mi">48462</span> <span class="o">---</span> <span class="o">[</span>           <span class="n">main</span><span class="o">]</span> <span class="n">org</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">apps</span><span class="o">.</span><span class="na">App</span>                     <span class="o">:</span> <span class="n">Started</span> <span class="n">App</span> <span class="k">in</span> <span class="mf">3.595</span> <span class="n">seconds</span> <span class="o">(</span><span class="n">JVM</span> <span class="n">running</span> <span class="k">for</span> <span class="mf">3.942</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Instead of the bootRun gradle task you can also use:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./gradlew run
</span></code></pre></td></tr></table></div></figure>


<p>thanks to application plugin. More information about gradle plugins and where to go from here because our app does not do much now, in the next adventure. Stay tuned!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Jekyll They Said!]]></title>
    <link href="http://dark5un.github.io/blog/2017/01/29/github-pages-adventure/"/>
    <updated>2017-01-29T18:12:00+00:00</updated>
    <id>http://dark5un.github.io/blog/2017/01/29/github-pages-adventure</id>
    <content type="html"><![CDATA[<p>For what is worth keeping a blog in <a href="https://jekyllrb.com">Jekyll</a> might sound easy. Posting pages in <a href="https://github.com">GitHub</a> might sound even easier. But its not.
Bootstrapping this blog for example took me some time to figure out as I wanted to have everything included. The whole battery pack.
So I picked up a bunch of plugins, check a nice theme and modified it a bit.
Locally everything started to work fine.
Then it began to fall apart.</p>

<p>Sometimes I have to think small. I probably should use other platforms like medium to express. Well you cannot blame me for looking something closer to editor/git pair.</p>

<p>And there we are now.</p>

<p>Plain simple almost vanilla blog. For now.</p>

<p>Some <a href="https://github.com/blog/1992-eight-lessons-learned-hacking-on-github-pages-for-six-months">nice guidance</a> always found after a bunch of trials just to make Murphy&rsquo;s law worth something.</p>

<p>(update 11/2/2017)
Finally I used <a href="http://octopress.org/">Octopress</a>. Less hassle. Seriously.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I Am Back!]]></title>
    <link href="http://dark5un.github.io/blog/2017/01/29/I%20am%20back/"/>
    <updated>2017-01-29T15:11:53+00:00</updated>
    <id>http://dark5un.github.io/blog/2017/01/29/I am back</id>
    <content type="html"><![CDATA[<p>Finally. It was time. It has been 18+ years in software development and 14 programming languages professionally used. The time has come to focus.</p>

<p>This will be my log on my daily adventures.</p>

<p>Enjoy.
P</p>
]]></content>
  </entry>
  
</feed>
